// Common configuration to be included by other impls

akka {
  actor {
    provider = cluster
    serialization-bindings {
      "scalapb.GeneratedMessage" = proto
    }
  }

  coordinated-shutdown.exit-jvm = on

  http.server.preview.enable-http2 = on

  remote.netty.tcp.port = ${?REMOTING_PORT}

  cluster {
    shutdown-after-unsuccessful-join-seed-nodes = 60s

    sharding.state-store-mode = ddata

    // fixme Of course, this is not ideal, but not much choice at the moment.
    auto-down-unreachable-after = 30s

    sharding {
      rebalance-interval = 5s
    }
  }

  management {
    http.port = ${?MANAGEMENT_PORT}
    cluster.bootstrap {
      contact-point-discovery {
        discovery-method = kubernetes-api
        service-name = ${?SELECTOR_LABEL_VALUE}
        required-contact-point-nr = ${?REQUIRED_CONTACT_POINT_NR}
        # This is quite short, but in Knative we want to scale from zero very quickly.
        # todo work out whether Knative will increment scale from zero by more than one,
        # if it will, this could be problematic.
        stable-margin = 1s
      }
    }

    health-checks {
      readiness-checks.cloudstate = "io.cloudstate.proxy.HealthCheckReady"
      liveness-checks.cloudstate = "io.cloudstate.proxy.HealthCheckLive"
    }
  }

  discovery.kubernetes-api {
    pod-label-selector = ${?SELECTOR_LABEL}"=%s"
  }

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
}